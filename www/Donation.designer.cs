#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Zero.ShareDream
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataSource")]
	public partial class DonationDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertChild(Child instance);
    partial void UpdateChild(Child instance);
    partial void DeleteChild(Child instance);
    partial void InsertHelp(Help instance);
    partial void UpdateHelp(Help instance);
    partial void DeleteHelp(Help instance);
    partial void InsertNotify(Notify instance);
    partial void UpdateNotify(Notify instance);
    partial void DeleteNotify(Notify instance);
    #endregion
		
		public DonationDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["socialDonationConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DonationDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DonationDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DonationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DonationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Child> Childs
		{
			get
			{
				return this.GetTable<Child>();
			}
		}
		
		public System.Data.Linq.Table<Help> Helps
		{
			get
			{
				return this.GetTable<Help>();
			}
		}
		
		public System.Data.Linq.Table<Notify> Notifies
		{
			get
			{
				return this.GetTable<Notify>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Accounts")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _AccountID;
		
		private string _Name;
		
		private string _Email;
		
		private string _Password;
		
		private long _MobileNo;
		
		private string _Address;
		
		private byte _Isverified;
		
		private string _CurrentCity;
		
		private System.DateTime _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(long value);
    partial void OnAccountIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnMobileNoChanging(long value);
    partial void OnMobileNoChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnIsverifiedChanging(byte value);
    partial void OnIsverifiedChanged();
    partial void OnCurrentCityChanging(string value);
    partial void OnCurrentCityChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNo", DbType="BigInt NOT NULL")]
		public long MobileNo
		{
			get
			{
				return this._MobileNo;
			}
			set
			{
				if ((this._MobileNo != value))
				{
					this.OnMobileNoChanging(value);
					this.SendPropertyChanging();
					this._MobileNo = value;
					this.SendPropertyChanged("MobileNo");
					this.OnMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isverified", DbType="TinyInt NOT NULL")]
		public byte Isverified
		{
			get
			{
				return this._Isverified;
			}
			set
			{
				if ((this._Isverified != value))
				{
					this.OnIsverifiedChanging(value);
					this.SendPropertyChanging();
					this._Isverified = value;
					this.SendPropertyChanged("Isverified");
					this.OnIsverifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentCity", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string CurrentCity
		{
			get
			{
				return this._CurrentCity;
			}
			set
			{
				if ((this._CurrentCity != value))
				{
					this.OnCurrentCityChanging(value);
					this.SendPropertyChanging();
					this._CurrentCity = value;
					this.SendPropertyChanged("CurrentCity");
					this.OnCurrentCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Childs")]
	public partial class Child : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ChildID;
		
		private string _ChildName;
		
		private System.Data.Linq.Binary _ChildPic1ID;
		
		private string _ChildAddress;
		
		private string _ChildCountry;
		
		private string _ChildCity;
		
		private string _ChildStory;
		
		private long _CareNumber;
		
		private System.Nullable<int> _ChildAge;
		
		private long _AccountID;
		
		private System.DateTime _CreateDate;
		
		private string _FileName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnChildIDChanging(long value);
    partial void OnChildIDChanged();
    partial void OnChildNameChanging(string value);
    partial void OnChildNameChanged();
    partial void OnChildPic1IDChanging(System.Data.Linq.Binary value);
    partial void OnChildPic1IDChanged();
    partial void OnChildAddressChanging(string value);
    partial void OnChildAddressChanged();
    partial void OnChildCountryChanging(string value);
    partial void OnChildCountryChanged();
    partial void OnChildCityChanging(string value);
    partial void OnChildCityChanged();
    partial void OnChildStoryChanging(string value);
    partial void OnChildStoryChanged();
    partial void OnCareNumberChanging(long value);
    partial void OnCareNumberChanged();
    partial void OnChildAgeChanging(System.Nullable<int> value);
    partial void OnChildAgeChanged();
    partial void OnAccountIDChanging(long value);
    partial void OnAccountIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    #endregion
		
		public Child()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ChildID
		{
			get
			{
				return this._ChildID;
			}
			set
			{
				if ((this._ChildID != value))
				{
					this.OnChildIDChanging(value);
					this.SendPropertyChanging();
					this._ChildID = value;
					this.SendPropertyChanged("ChildID");
					this.OnChildIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildName", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string ChildName
		{
			get
			{
				return this._ChildName;
			}
			set
			{
				if ((this._ChildName != value))
				{
					this.OnChildNameChanging(value);
					this.SendPropertyChanging();
					this._ChildName = value;
					this.SendPropertyChanged("ChildName");
					this.OnChildNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildPic1ID", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ChildPic1ID
		{
			get
			{
				return this._ChildPic1ID;
			}
			set
			{
				if ((this._ChildPic1ID != value))
				{
					this.OnChildPic1IDChanging(value);
					this.SendPropertyChanging();
					this._ChildPic1ID = value;
					this.SendPropertyChanged("ChildPic1ID");
					this.OnChildPic1IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildAddress", DbType="VarChar(300)")]
		public string ChildAddress
		{
			get
			{
				return this._ChildAddress;
			}
			set
			{
				if ((this._ChildAddress != value))
				{
					this.OnChildAddressChanging(value);
					this.SendPropertyChanging();
					this._ChildAddress = value;
					this.SendPropertyChanged("ChildAddress");
					this.OnChildAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildCountry", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string ChildCountry
		{
			get
			{
				return this._ChildCountry;
			}
			set
			{
				if ((this._ChildCountry != value))
				{
					this.OnChildCountryChanging(value);
					this.SendPropertyChanging();
					this._ChildCountry = value;
					this.SendPropertyChanged("ChildCountry");
					this.OnChildCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildCity", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string ChildCity
		{
			get
			{
				return this._ChildCity;
			}
			set
			{
				if ((this._ChildCity != value))
				{
					this.OnChildCityChanging(value);
					this.SendPropertyChanging();
					this._ChildCity = value;
					this.SendPropertyChanged("ChildCity");
					this.OnChildCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildStory", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ChildStory
		{
			get
			{
				return this._ChildStory;
			}
			set
			{
				if ((this._ChildStory != value))
				{
					this.OnChildStoryChanging(value);
					this.SendPropertyChanging();
					this._ChildStory = value;
					this.SendPropertyChanged("ChildStory");
					this.OnChildStoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CareNumber", DbType="BigInt NOT NULL")]
		public long CareNumber
		{
			get
			{
				return this._CareNumber;
			}
			set
			{
				if ((this._CareNumber != value))
				{
					this.OnCareNumberChanging(value);
					this.SendPropertyChanging();
					this._CareNumber = value;
					this.SendPropertyChanged("CareNumber");
					this.OnCareNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildAge", DbType="Int")]
		public System.Nullable<int> ChildAge
		{
			get
			{
				return this._ChildAge;
			}
			set
			{
				if ((this._ChildAge != value))
				{
					this.OnChildAgeChanging(value);
					this.SendPropertyChanging();
					this._ChildAge = value;
					this.SendPropertyChanged("ChildAge");
					this.OnChildAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt NOT NULL")]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(300)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Helps")]
	public partial class Help : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HelpID;
		
		private string _HelperName;
		
		private string _HelperEmail;
		
		private string _HelperHelp;
		
		private long _HelperMobileNo;
		
		private long _HelpChildID;
		
		private System.DateTime _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHelpIDChanging(int value);
    partial void OnHelpIDChanged();
    partial void OnHelperNameChanging(string value);
    partial void OnHelperNameChanged();
    partial void OnHelperEmailChanging(string value);
    partial void OnHelperEmailChanged();
    partial void OnHelperHelpChanging(string value);
    partial void OnHelperHelpChanged();
    partial void OnHelperMobileNoChanging(long value);
    partial void OnHelperMobileNoChanged();
    partial void OnHelpChildIDChanging(long value);
    partial void OnHelpChildIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Help()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int HelpID
		{
			get
			{
				return this._HelpID;
			}
			set
			{
				if ((this._HelpID != value))
				{
					this.OnHelpIDChanging(value);
					this.SendPropertyChanging();
					this._HelpID = value;
					this.SendPropertyChanged("HelpID");
					this.OnHelpIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelperName", DbType="VarChar(150)")]
		public string HelperName
		{
			get
			{
				return this._HelperName;
			}
			set
			{
				if ((this._HelperName != value))
				{
					this.OnHelperNameChanging(value);
					this.SendPropertyChanging();
					this._HelperName = value;
					this.SendPropertyChanged("HelperName");
					this.OnHelperNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelperEmail", DbType="VarChar(300)")]
		public string HelperEmail
		{
			get
			{
				return this._HelperEmail;
			}
			set
			{
				if ((this._HelperEmail != value))
				{
					this.OnHelperEmailChanging(value);
					this.SendPropertyChanging();
					this._HelperEmail = value;
					this.SendPropertyChanged("HelperEmail");
					this.OnHelperEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelperHelp", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string HelperHelp
		{
			get
			{
				return this._HelperHelp;
			}
			set
			{
				if ((this._HelperHelp != value))
				{
					this.OnHelperHelpChanging(value);
					this.SendPropertyChanging();
					this._HelperHelp = value;
					this.SendPropertyChanged("HelperHelp");
					this.OnHelperHelpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelperMobileNo", DbType="BigInt NOT NULL")]
		public long HelperMobileNo
		{
			get
			{
				return this._HelperMobileNo;
			}
			set
			{
				if ((this._HelperMobileNo != value))
				{
					this.OnHelperMobileNoChanging(value);
					this.SendPropertyChanging();
					this._HelperMobileNo = value;
					this.SendPropertyChanged("HelperMobileNo");
					this.OnHelperMobileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelpChildID", DbType="BigInt NOT NULL")]
		public long HelpChildID
		{
			get
			{
				return this._HelpChildID;
			}
			set
			{
				if ((this._HelpChildID != value))
				{
					this.OnHelpChildIDChanging(value);
					this.SendPropertyChanging();
					this._HelpChildID = value;
					this.SendPropertyChanged("HelpChildID");
					this.OnHelpChildIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notifys")]
	public partial class Notify : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NotifyID;
		
		private string _NotifyText;
		
		private long _ChildID;
		
		private long _AccountID;
		
		private System.DateTime _CreateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNotifyIDChanging(int value);
    partial void OnNotifyIDChanged();
    partial void OnNotifyTextChanging(string value);
    partial void OnNotifyTextChanged();
    partial void OnChildIDChanging(long value);
    partial void OnChildIDChanged();
    partial void OnAccountIDChanging(long value);
    partial void OnAccountIDChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    #endregion
		
		public Notify()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NotifyID
		{
			get
			{
				return this._NotifyID;
			}
			set
			{
				if ((this._NotifyID != value))
				{
					this.OnNotifyIDChanging(value);
					this.SendPropertyChanging();
					this._NotifyID = value;
					this.SendPropertyChanged("NotifyID");
					this.OnNotifyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyText", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NotifyText
		{
			get
			{
				return this._NotifyText;
			}
			set
			{
				if ((this._NotifyText != value))
				{
					this.OnNotifyTextChanging(value);
					this.SendPropertyChanging();
					this._NotifyText = value;
					this.SendPropertyChanged("NotifyText");
					this.OnNotifyTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChildID", DbType="BigInt NOT NULL")]
		public long ChildID
		{
			get
			{
				return this._ChildID;
			}
			set
			{
				if ((this._ChildID != value))
				{
					this.OnChildIDChanging(value);
					this.SendPropertyChanging();
					this._ChildID = value;
					this.SendPropertyChanged("ChildID");
					this.OnChildIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="BigInt NOT NULL")]
		public long AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
